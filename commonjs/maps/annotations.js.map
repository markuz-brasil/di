{"version":3,"sources":["annotations.js"],"names":[],"mappings":"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","file":"annotations.js","sourcesContent":["import { isFunction } from './util'\n\n\n// This module contains:\n// - built-in annotation classes\n// - helpers to read/write annotations\n\n\n// ANNOTATIONS\n\n// A built-in token.\n// Used to ask for pre-injected parent constructor.\n// A class constructor can ask for this.\nexport class SuperConstructor {}\n\n// A built-in scope.\n// Never cache.\nexport class TransientScope {}\n\nexport class Factory {}\nexport class Constructor {}\n\nexport class Inject {\n  constructor(...tokens) {\n    this.tokens = tokens\n    this.isPromise = false\n    this.isLazy = false\n  }\n}\n\nexport class InjectPromise extends Inject {\n  constructor(...tokens) {\n    this.tokens = tokens\n    this.isPromise = true\n    this.isLazy = false\n  }\n}\n\nexport class InjectLazy extends Inject {\n  constructor(...tokens) {\n    this.tokens = tokens\n    this.isPromise = false\n    this.isLazy = true\n  }\n}\n\nexport class Provide {\n  constructor(token) {\n    this.token = token\n    this.isPromise = false\n  }\n}\n\nexport class ProvidePromise extends Provide {\n  constructor(token) {\n    this.token = token\n    this.isPromise = true\n  }\n}\n\n\n// HELPERS\n\n// Append annotation on a function or class.\n// This can be helpful when not using ES6+.\nexport function annotate(fn, annotation) {\n\n  if (fn.annotations === Object.getPrototypeOf(fn).annotations) {\n    fn.annotations = []\n  }\n\n  fn.annotations = fn.annotations || []\n  fn.annotations.push(annotation)\n}\n\n\n// Read annotations on a function or class and return whether given annotation is present.\nexport function hasAnnotation(fn, annotationClass) {\n  if (!fn.annotations || fn.annotations.length === 0) {\n    return false\n  }\n\n  for (var annotation of fn.annotations) {\n    if (annotation instanceof annotationClass) {\n      return true\n    }\n  }\n\n  return false\n}\n\n\n// Read annotations on a function or class and collect \"interesting\" metadata:\nexport function readAnnotations(fn) {\n  var collectedAnnotations = {\n    // Description of the provided value.\n    provide: {\n      token: null,\n      isPromise: false\n    },\n\n    // List of parameter descriptions.\n    // A parameter description is an object with properties:\n    // - token (anything)\n    // - isPromise (boolean)\n    // - isLazy (boolean)\n    params: []\n  }\n\n  if (fn.annotations && fn.annotations.length) {\n    for (var annotation of fn.annotations) {\n      if (annotation instanceof Inject) {\n        annotation.tokens.forEach((token) => {\n          collectedAnnotations.params.push({\n            token: token,\n            isPromise: annotation.isPromise,\n            isLazy: annotation.isLazy\n          })\n        })\n      }\n\n      if (annotation instanceof Provide) {\n        collectedAnnotations.provide.token = annotation.token\n        collectedAnnotations.provide.isPromise = annotation.isPromise\n      }\n    }\n  }\n\n  // Read annotations for individual parameters.\n  if (fn.parameters) {\n    fn.parameters.forEach((param, idx) => {\n      for (var paramAnnotation of param) {\n        // Type annotation.\n        if (isFunction(paramAnnotation) && !collectedAnnotations.params[idx]) {\n          collectedAnnotations.params[idx] = {\n            token: paramAnnotation,\n            isPromise: false,\n            isLazy: false\n          }\n        } else if (paramAnnotation instanceof Inject) {\n          collectedAnnotations.params[idx] = {\n            token: paramAnnotation.tokens[0],\n            isPromise: paramAnnotation.isPromise,\n            isLazy: paramAnnotation.isLazy\n          }\n        }\n      }\n    })\n  }\n\n  return collectedAnnotations\n}\n"],"sourceRoot":"/source/"}